openapi: 3.0.0
info:
  title: Flask-Postgres API
  description: A simple customer management API built with Flask and PostgreSQL.
  version: 1.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/TITOVKARINA/customer_api/1.0.0
  - url: http://localhost:5001
    description: Local development server

paths:
  /customers:
    get:
      summary: Get all customers or filter by city
      description: Returns a list of all customers. Optionally, you can filter by city using a query parameter.
      parameters:
        - in: query
          name: city
          schema:
            type: string
          required: false
          description: City name to filter customers by
      responses:
        '200':
          description: A list of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        '404':
          description: No customers found in the specified city
    post:
      summary: Create a new customer
      description: Adds a new customer to the database.
      requestBody:
        description: Customer data to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerInput'
      responses:
        '200':
          description: Customer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Invalid input or missing fields
  /customers/{id}:
    get:
      summary: Get a customer by ID
      description: Returns the details of a specific customer by their ID.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The ID of the customer
      responses:
        '200':
          description: The details of the customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '404':
          description: Customer not found

components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the customer
        first_name:
          type: string
          description: First name of the customer
        last_name:
          type: string
          description: Last name of the customer
        email:
          type: string
          format: email
          description: Email address of the customer
        address:
          type: string
          description: Address of the customer
        city:
          type: string
          description: City of the customer
        state:
          type: string
          description: State of the customer
        zip:
          type: string
          description: ZIP code of the customer
      required:
        - first_name
        - last_name
        - email
        - address
        - city
        - state
        - zip
    CustomerInput:
      type: object
      properties:
        first_name:
          type: string
          description: First name of the customer
        last_name:
          type: string
          description: Last name of the customer
        email:
          type: string
          format: email
          description: Email address of the customer
        address:
          type: string
          description: Address of the customer
        city:
          type: string
          description: City of the customer
        state:
          type: string
          description: State of the customer
        zip:
          type: string
          description: ZIP code of the customer
      required:
        - first_name
        - last_name
        - email
        - address
        - city
        - state
        - zip